# -*- coding: utf-8 -*-
"""FLASKK.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/Megha2306/693fcc3ed5af38ba50ddbfaecf4b16ea/untitled2.ipynb
"""

!pip install -q diffusers transformers accelerate torch trimesh pillow flask flask-ngrok
!pip install -q import-ipynb

from google.colab import drive
drive.mount('/content/drive')

import os
os.chdir('/content/drive/MyDrive/Colab Notebooks')
print(os.listdir('.'))

!pip install -q import-ipynb

# Commented out IPython magic to ensure Python compatibility.
# %run "/content/drive/MyDrive/Colab Notebooks/sshape_e_text_to_3d_colab.ipynb"   :contentReference[oaicite:4]{index=4}
# %run "/content/drive/MyDrive/Colab Notebooks/shape_e_image_to_3d_colab.ipynb"

import import_ipynb                                  # installs the loader
import sshape_e_text_to_3d_colab as text_nb           # name matches filename minus .ipynb
import shape_e_image_to_3d_colab as image_nb

from flask import Flask, request, send_file, render_template_string
from flask_ngrok import run_with_ngrok
import io

app = Flask(__name__)
run_with_ngrok(app)   # Exposes via ngrok at runtime

# Simple upload form
FORM = """
<form method="post" enctype="multipart/form-data">
  <input type="radio" name="mode" value="text" checked>Text<br>
  <textarea name="prompt" placeholder="Enter prompt"></textarea><br>
  <input type="radio" name="mode" value="image">Image<br>
  <input type="file" name="file"><br>
  <button type="submit">Output</button>
</form>
"""

@app.route("/", methods=["GET", "POST"])
def index():
    if request.method == "POST":
        if request.form["mode"] == "text":
            # import option
            mesh = gen_from_text(request.form["prompt"])
        else:
            # Save the input image for processing
            imgfile = request.files["file"]
            imgfile.save("image-o.png")
            mesh = gen_from_image("image-o.png")

        # Stream the it back to the interface
        buf = io.BytesIO()
        mesh.export(buf, file_type="obj")
        buf.seek(0)
        return send_file(
            buf,
            as_attachment=True,
            download_name="model.obj"
        )  # streams file for download :contentReference[oaicite:1]{index=1}

    return render_template_string(FORM)

app.py()